name: PR Validation and Sync

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  validate-and-sync:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: read # Read-only access to issues is needed

    steps:
      - name: Validate PR Body and Sync from Issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { repo, owner } = context.repo;
            const pr = context.payload.pull_request;
            const prNumber = pr.number;
            const body = pr.body;
            
            // --- 1. VALIDATION ---
            const errorMessages = [];
            
            // Check if required fields are still using placeholder text
            if (body.includes("*Enter your name here.*")) errorMessages.push("- The 'Name' field is missing.");
            if (body.includes("*Enter your GitHub ID here.*")) errorMessages.push("- The 'GitHub ID' field is missing.");
            if (body.includes("*Enter your email ID here.*")) errorMessages.push("- The 'Email ID' field is missing.");
            
            // Check for a correctly formatted linked issue (e.g., "Closes: #123")
            const issueRegex = /Closes:?\s*#(\d+)/i;
            const issueMatch = body.match(issueRegex);
            
            if (!issueMatch) {
              errorMessages.push("- The PR does not properly close an issue. Use the format `Closes: #123` in your description.");
            }
            
            // --- 2. POST COMMENT AND FAIL IF INVALID ---
            if (errorMessages.length > 0) {
              const fullErrorMessage = `❌ **PR Validation Failed!**\n\nPlease fix the following issues in your PR description:\n${errorMessages.join('\n')}`;
              
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prNumber,
                body: fullErrorMessage
              });
              
              core.setFailed("PR validation failed. See the comment for details.");
              return; // Stop the script
            }

            await github.rest.issues.createComment({
              owner,
repo,
              issue_number: prNumber,
              body: "✅ PR validation passed! Syncing information from the linked issue..."
            });

            // --- 3. SYNC FROM LINKED ISSUE (only if validation passed) ---
            const issueNumber = parseInt(issueMatch[1], 10);
            
            console.log(`Fetching data from linked issue #${issueNumber}`);
            
            // Get the linked issue's data
            const { data: issue } = await github.rest.issues.get({
              owner,
              repo,
              issue_number: issueNumber,
            });
            
            // Sync assignees from the issue to the PR
            const issueAssignees = issue.assignees.map(assignee => assignee.login);
            if (issueAssignees.length > 0) {
              await github.rest.issues.addAssignees({
                owner,
                repo,
                issue_number: prNumber,
                assignees: issueAssignees
              });
              console.log(`Synced assignees: ${issueAssignees.join(', ')}`);
            }

            const issueLabels = issue.labels.map(label => label.name);
            const labelsToAdd = [];
            
            // Copy program-specific labels (GSSOC, etc.) from issue to PR
            const programs = ['GSSOC', 'SSOC', 'SWOC', 'WoB']; 
            issueLabels.forEach(label => {
              if (programs.includes(label)) {
                labelsToAdd.push(label);
              }
            });

            // If issue has a label 'assigned', add 'review ongoing' to the PR
            if (issueLabels.some(label => label.toLowerCase() === 'assigned')) {
              labelsToAdd.push('review ongoing');
            }

            if (labelsToAdd.length > 0) {
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: prNumber,
                labels: labelsToAdd
              });
              console.log(`Added labels to PR: ${labelsToAdd.join(', ')}`);
            }

            console.log("PR sync complete!");
